<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Level_00" xml:space="preserve">
    <value>0 кю</value>
    <comment>0 кю</comment>
  </data>
  <data name="Level_00_BeltColor" xml:space="preserve">
    <value>белый пояс</value>
    <comment>белый пояс</comment>
  </data>
  <data name="Level_00_Description" xml:space="preserve">
    <value>чистота и незнание</value>
    <comment>чистота и незнание</comment>
  </data>
  <data name="Level_01" xml:space="preserve">
    <value>10 кю</value>
    <comment>10 кю</comment>
  </data>
  <data name="Level_01_BeltColor" xml:space="preserve">
    <value>оранжевый пояс</value>
    <comment>оранжевый пояс</comment>
  </data>
  <data name="Level_01_Description" xml:space="preserve">
    <value>начало большго пути</value>
    <comment>начало большго пути</comment>
  </data>
  <data name="Level_02" xml:space="preserve">
    <value>9 кю</value>
    <comment>9 кю</comment>
  </data>
  <data name="Level_02_BeltColor" xml:space="preserve">
    <value>оранжевый пояс с синей полоской</value>
    <comment>оранжевый пояс с синей полоской</comment>
  </data>
  <data name="Level_02_Description" xml:space="preserve">
    <value>начало большго пути</value>
    <comment>начало большго пути</comment>
  </data>
  <data name="Level_03" xml:space="preserve">
    <value>8 кю</value>
    <comment>8 кю</comment>
  </data>
  <data name="Level_03_BeltColor" xml:space="preserve">
    <value>синий пояс</value>
    <comment>синий пояс</comment>
  </data>
  <data name="Level_03_Description" xml:space="preserve">
    <value>цвет воды и неба на восходе Солнца</value>
    <comment>цвет воды и неба на восходе Солнца</comment>
  </data>
  <data name="Level_04" xml:space="preserve">
    <value>7 кю</value>
    <comment>7 кю</comment>
  </data>
  <data name="Level_04_BeltColor" xml:space="preserve">
    <value>синий пояс с желтой полоской</value>
    <comment>синий пояс с желтой полоской</comment>
  </data>
  <data name="Level_04_Description" xml:space="preserve">
    <value>цвет воды и неба на восходе Солнца</value>
    <comment>цвет воды и неба на восходе Солнца</comment>
  </data>
  <data name="Level_05" xml:space="preserve">
    <value>6 кю</value>
    <comment>6 кю</comment>
  </data>
  <data name="Level_05_BeltColor" xml:space="preserve">
    <value>желтый пояс</value>
    <comment>желтый пояс</comment>
  </data>
  <data name="Level_05_Description" xml:space="preserve">
    <value>восход Солнца</value>
    <comment>восход Солнца</comment>
  </data>
  <data name="Level_06" xml:space="preserve">
    <value>5 кю</value>
    <comment>5 кю</comment>
  </data>
  <data name="Level_06_BeltColor" xml:space="preserve">
    <value>желтый пояс с зеленой полоской</value>
    <comment>желтый пояс с зеленой полоской</comment>
  </data>
  <data name="Level_06_Description" xml:space="preserve">
    <value>восход Солнца</value>
    <comment>восход Солнца</comment>
  </data>
  <data name="Level_07" xml:space="preserve">
    <value>4 кю</value>
    <comment>4 кю</comment>
  </data>
  <data name="Level_07_BeltColor" xml:space="preserve">
    <value>зеленый пояс</value>
    <comment>зеленый пояс</comment>
  </data>
  <data name="Level_07_Description" xml:space="preserve">
    <value>распустившийся цветок</value>
    <comment>распустившийся цветок</comment>
  </data>
  <data name="Level_08" xml:space="preserve">
    <value>3 кю</value>
    <comment>3 кю</comment>
  </data>
  <data name="Level_08_BeltColor" xml:space="preserve">
    <value>зеленый пояс с коричневой полоской</value>
    <comment>зеленый пояс с коричневой полоской</comment>
  </data>
  <data name="Level_08_Description" xml:space="preserve">
    <value>распустившийся цветок</value>
    <comment>распустившийся цветок</comment>
  </data>
  <data name="Level_09" xml:space="preserve">
    <value>2 кю</value>
    <comment>2 кю</comment>
  </data>
  <data name="Level_09_BeltColor" xml:space="preserve">
    <value>коричневый пояс</value>
    <comment>коричневый пояс</comment>
  </data>
  <data name="Level_09_Description" xml:space="preserve">
    <value>зрелость</value>
    <comment>зрелость</comment>
  </data>
  <data name="Level_10" xml:space="preserve">
    <value>1 кю</value>
    <comment>1 кю</comment>
  </data>
  <data name="Level_10_BeltColor" xml:space="preserve">
    <value>коричневый пояс с золотой полоской</value>
    <comment>коричневый пояс с золотой полоской</comment>
  </data>
  <data name="Level_10_Description" xml:space="preserve">
    <value>зрелость</value>
    <comment>зрелость</comment>
  </data>
  <data name="Level_11" xml:space="preserve">
    <value>1 дан</value>
    <comment>1 дан</comment>
  </data>
  <data name="Level_11_BeltColor" xml:space="preserve">
    <value>черный пояс с золотой полоской</value>
    <comment>черный пояс с золотой полоской</comment>
  </data>
  <data name="Level_11_Description" xml:space="preserve">
    <value>мудрость</value>
    <comment>мудрость</comment>
  </data>
  <data name="Level_12" xml:space="preserve">
    <value>2 дан</value>
    <comment>2 дан</comment>
  </data>
  <data name="Level_12_BeltColor" xml:space="preserve">
    <value>черный пояс с двумя золотыми полосками</value>
    <comment>черный пояс с двумя золотыми полосками</comment>
  </data>
  <data name="Level_12_Description" xml:space="preserve">
    <value>мудрость</value>
    <comment>мудрость</comment>
  </data>
  <data name="Level_13" xml:space="preserve">
    <value>3 дан</value>
    <comment>3 дан</comment>
  </data>
  <data name="Level_13_BeltColor" xml:space="preserve">
    <value>черный пояс с тремя золотыми полосками</value>
    <comment>черный пояс с тремя золотыми полосками</comment>
  </data>
  <data name="Level_13_Description" xml:space="preserve">
    <value>мудрость</value>
    <comment>мудрость</comment>
  </data>
  <data name="String1" xml:space="preserve">
    <value />
  </data>
</root>